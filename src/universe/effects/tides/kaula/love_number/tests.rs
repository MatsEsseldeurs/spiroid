use super::*;
use crate::universe::particles::planet::tests::test_planet_kaula;
use crate::universe::particles::star::tests::{TEST_TIME, test_star};
use pretty_assertions::assert_eq;

#[cfg(test)]
pub fn test_love_number() -> LoveNumber {
    let mut love_number = LoveNumber {
        real: vec![
            -0.0012432249910672862,
            -0.2012432249910673,
            -0.4012432249910673,
            -0.0017405149874942004,
            -0.2017405149874942,
            -0.40174051498749425,
            -0.002237804983921115,
            -0.20223780498392113,
            -0.40223780498392114,
            -0.0009945799928538289,
            -0.20099457999285383,
            -0.4009945799928539,
            -0.0014918699892807433,
            -0.20149186998928076,
            -0.40149186998928077,
            -0.0019891599857076578,
            -0.20198915998570766,
            -0.40198915998570767,
            -0.0007459349946403717,
            -0.20074593499464038,
            -0.4007459349946404,
            -0.0012432249910672862,
            -0.2012432249910673,
            -0.4012432249910673,
            -0.0017405149874942004,
            -0.2017405149874942,
            -0.40174051498749425,
            -0.0004972899964269144,
            -0.20049728999642694,
            -0.4004972899964269,
            -0.0009945799928538289,
            -0.20099457999285383,
            -0.4009945799928539,
            -0.0014918699892807433,
            -0.20149186998928076,
            -0.40149186998928077,
            -0.0002486449982134572,
            -0.20024864499821346,
            -0.4002486449982135,
            -0.0007459349946403717,
            -0.20074593499464038,
            -0.4007459349946404,
            -0.0012432249910672862,
            -0.2012432249910673,
            -0.4012432249910673,
            -0.0,
            -0.2,
            -0.4,
            -0.0004972899964269144,
            -0.20049728999642694,
            -0.4004972899964269,
            -0.0009945799928538289,
            -0.20099457999285383,
            -0.4009945799928539,
            -0.0002486449982134572,
            -0.19975135500178656,
            -0.39975135500178655,
            -0.0002486449982134572,
            -0.20024864499821346,
            -0.4002486449982135,
            -0.0007459349946403717,
            -0.20074593499464038,
            -0.4007459349946404,
            -0.0004972899964269144,
            -0.19950271000357309,
            -0.3995027100035731,
            -0.0,
            -0.2,
            -0.4,
            -0.0004972899964269144,
            -0.20049728999642694,
            -0.4004972899964269,
            -0.0007459349946403717,
            -0.19925406500535964,
            -0.39925406500535965,
            -0.0002486449982134572,
            -0.19975135500178656,
            -0.39975135500178655,
            -0.0002486449982134572,
            -0.20024864499821346,
            -0.4002486449982135,
            -0.0009945799928538289,
            -0.1990054200071462,
            -0.39900542000714617,
            -0.0004972899964269144,
            -0.19950271000357309,
            -0.3995027100035731,
            -0.0,
            -0.2,
            -0.4,
            -0.0012432249910672862,
            -0.1987567750089327,
            -0.39875677500893275,
            -0.0007459349946403717,
            -0.19925406500535964,
            -0.39925406500535965,
            -0.0002486449982134572,
            -0.19975135500178656,
            -0.39975135500178655,
            -0.0014918699892807433,
            -0.19850813001071926,
            -0.3985081300107193,
            -0.0009945799928538289,
            -0.1990054200071462,
            -0.39900542000714617,
            -0.0004972899964269144,
            -0.19950271000357309,
            -0.3995027100035731,
            -0.0017405149874942004,
            -0.19825948501250582,
            -0.3982594850125058,
            -0.0012432249910672862,
            -0.1987567750089327,
            -0.39875677500893275,
            -0.0007459349946403717,
            -0.19925406500535964,
            -0.39925406500535965,
            -0.0019891599857076578,
            -0.19801084001429237,
            -0.3980108400142924,
            -0.0014918699892807433,
            -0.19850813001071926,
            -0.3985081300107193,
            -0.0009945799928538289,
            -0.1990054200071462,
            -0.39900542000714617,
            -0.002237804983921115,
            -0.1977621950160789,
            -0.3977621950160789,
            -0.0017405149874942004,
            -0.19825948501250582,
            -0.3982594850125058,
            -0.0012432249910672862,
            -0.1987567750089327,
            -0.39875677500893275,
        ],
        imaginary: vec![
            0.0012432249910672862,
            0.2012432249910673,
            0.4012432249910673,
            0.0017405149874942004,
            0.2017405149874942,
            0.40174051498749425,
            0.002237804983921115,
            0.20223780498392113,
            0.40223780498392114,
            0.0009945799928538289,
            0.20099457999285383,
            0.4009945799928539,
            0.0014918699892807433,
            0.20149186998928076,
            0.40149186998928077,
            0.0019891599857076578,
            0.20198915998570766,
            0.40198915998570767,
            0.0007459349946403717,
            0.20074593499464038,
            0.4007459349946404,
            0.0012432249910672862,
            0.2012432249910673,
            0.4012432249910673,
            0.0017405149874942004,
            0.2017405149874942,
            0.40174051498749425,
            0.0004972899964269144,
            0.20049728999642694,
            0.4004972899964269,
            0.0009945799928538289,
            0.20099457999285383,
            0.4009945799928539,
            0.0014918699892807433,
            0.20149186998928076,
            0.40149186998928077,
            0.0002486449982134572,
            0.20024864499821346,
            0.4002486449982135,
            0.0007459349946403717,
            0.20074593499464038,
            0.4007459349946404,
            0.0012432249910672862,
            0.2012432249910673,
            0.4012432249910673,
            0.0,
            0.2,
            0.4,
            0.0004972899964269144,
            0.20049728999642694,
            0.4004972899964269,
            0.0009945799928538289,
            0.20099457999285383,
            0.4009945799928539,
            -0.0002486449982134572,
            0.19975135500178656,
            0.39975135500178655,
            0.0002486449982134572,
            0.20024864499821346,
            0.4002486449982135,
            0.0007459349946403717,
            0.20074593499464038,
            0.4007459349946404,
            -0.0004972899964269144,
            0.19950271000357309,
            0.3995027100035731,
            0.0,
            0.2,
            0.4,
            0.0004972899964269144,
            0.20049728999642694,
            0.4004972899964269,
            -0.0007459349946403717,
            0.19925406500535964,
            0.39925406500535965,
            -0.0002486449982134572,
            0.19975135500178656,
            0.39975135500178655,
            0.0002486449982134572,
            0.20024864499821346,
            0.4002486449982135,
            -0.0009945799928538289,
            0.1990054200071462,
            0.39900542000714617,
            -0.0004972899964269144,
            0.19950271000357309,
            0.3995027100035731,
            0.0,
            0.2,
            0.4,
            -0.0012432249910672862,
            0.1987567750089327,
            0.39875677500893275,
            -0.0007459349946403717,
            0.19925406500535964,
            0.39925406500535965,
            -0.0002486449982134572,
            0.19975135500178656,
            0.39975135500178655,
            -0.0014918699892807433,
            0.19850813001071926,
            0.3985081300107193,
            -0.0009945799928538289,
            0.1990054200071462,
            0.39900542000714617,
            -0.0004972899964269144,
            0.19950271000357309,
            0.3995027100035731,
            -0.0017405149874942004,
            0.19825948501250582,
            0.3982594850125058,
            -0.0012432249910672862,
            0.1987567750089327,
            0.39875677500893275,
            -0.0007459349946403717,
            0.19925406500535964,
            0.39925406500535965,
            -0.0019891599857076578,
            0.19801084001429237,
            0.3980108400142924,
            -0.0014918699892807433,
            0.19850813001071926,
            0.3985081300107193,
            -0.0009945799928538289,
            0.1990054200071462,
            0.39900542000714617,
            -0.002237804983921115,
            0.1977621950160789,
            0.3977621950160789,
            -0.0017405149874942004,
            0.19825948501250582,
            0.3982594850125058,
            -0.0012432249910672862,
            0.1987567750089327,
            0.39875677500893275,
        ],
        imaginary_atmosphere: Interpolator::new(),
        imaginary_oceanic: Interpolator::new(),
        imaginary_solid: Interpolator::new(),
        real_solid: Interpolator::new(),
        love_interpolator: vec![],
    };

    love_number.imaginary_solid.init(
        &[0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0],
        &[
            0.0, -2.0, -4.0, -6.0, -8.0, -10.0, -12.0, -14.0, -16.0, -18.0, -20.0,
        ],
    );
    love_number.real_solid.init(
        &[0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0],
        &[0.0, 2.0, 4.0, 6.0, 8.0, 10.0, 12.0, 14.0, 16.0, 18.0, 20.0],
    );

    love_number
}

#[test]
fn _solid() {
    let mut love_number = test_love_number();
    let mut planet = test_planet_kaula();
    planet.spin = 0.1;
    let star = test_star();
    let particle_type = ParticleComposition::Solid {
        solid_file: "dummy".into(),
    };

    let real_expected = love_number.real.clone();
    let imaginary_expected = love_number.imaginary.clone();

    let _ = love_number.refresh_cache(TEST_TIME, &planet, &star, &particle_type);

    assert_eq!(
        (real_expected, imaginary_expected),
        (love_number.real, love_number.imaginary)
    );
}
